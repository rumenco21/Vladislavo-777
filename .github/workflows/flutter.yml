name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_apk:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'latest'

    - name: Create Flutter project and inject code
      run: |
        flutter create . --project-name vladislavo777
        rm -f lib/main.dart
        cat > lib/main.dart <<'DART'
import 'dart:math';
import 'package:flutter/material.dart';

void main() => runApp(const CardPredictorApp());

class CardPredictorApp extends StatelessWidget {
  const CardPredictorApp({super.key});
  @override
  Widget build(BuildContext ctx) => MaterialApp(
        title: 'Vladislavo 777',
        theme: ThemeData.dark().copyWith(
          scaffoldBackgroundColor: Colors.black87,
          colorScheme: ColorScheme.fromSeed(
            seedColor: Colors.red,
            brightness: Brightness.dark,
          ),
        ),
        home: const HomePage(),
        debugShowCheckedModeBanner: false,
      );
}

enum Suit { hearts, diamonds, clubs, spades }

class PlayingCard {
  final Suit suit;
  final int value; // 1..13
  PlayingCard(this.suit, this.value);
  bool get isRed => suit == Suit.hearts || suit == Suit.diamonds;
  String get label {
    const faces = {1: 'A', 11: 'J', 12: 'Q', 13: 'K'};
    return '${faces[value] ?? value}${_suitIcon()}';
  }

  String _suitIcon() {
    switch (suit) {
      case Suit.hearts:
        return '♥';
      case Suit.diamonds:
        return '♦';
      case Suit.clubs:
        return '♣';
      case Suit.spades:
        return '♠';
    }
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});
  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  late List<PlayingCard> _deck;
  final List<PlayingCard> _history = [];
  int _correct =
